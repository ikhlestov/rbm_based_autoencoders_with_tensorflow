{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"tile",
				"tiled_initial_images\tstatement"
			],
			[
				"from",
				"fromarray\tfunction"
			],
			[
				"rmb_",
				"rbm_1_class_based\tmodule"
			],
			[
				"map",
				"map_obj\tstatement"
			],
			[
				"bat",
				"batch_size\tstatement"
			],
			[
				"batch",
				"batch_size\tstatement"
			],
			[
				"test",
				"test_batches\tstatement"
			],
			[
				"get",
				"get_test_set\tfunction"
			],
			[
				"parse",
				"parse_args\tfunction"
			],
			[
				"Ar",
				"ArgumentParser\tclass"
			],
			[
				"save",
				"save_path\tparam"
			],
			[
				"sa",
				"saver"
			],
			[
				"labels",
				"labels_perm\tstatement"
			],
			[
				"vali",
				"valid_loss\tstatement"
			],
			[
				"summ",
				"summary_str\tstatement"
			],
			[
				"add",
				"add_summary\tfunction"
			],
			[
				"valid",
				"valid_loss\tstatement"
			],
			[
				"get_va",
				"get_validation_set_iter\tfunction"
			],
			[
				"data",
				"data_provider\tstatement"
			],
			[
				"exi",
				"exist_ok\tparam"
			],
			[
				"main",
				"main_save_dir\tstatement"
			],
			[
				"time",
				"time_cons\tstatement"
			],
			[
				"bias_vie",
				"bias_visible_upd8\tstatement"
			],
			[
				"scala",
				"scalar_summary\tfunction"
			],
			[
				"get_tra",
				"get_train_set_iter\tfunction"
			],
			[
				"floa",
				"float32\tstatement"
			],
			[
				"iter",
				"iterator\tstatement"
			],
			[
				"RMB",
				"RBM\tclass"
			],
			[
				"Mni",
				"MNISTDataProvider\tclass"
			],
			[
				"simp",
				"simple_rbm\tmodule"
			],
			[
				"Base",
				"BaseDataProvider\tclass"
			],
			[
				"NOt",
				"NotImplementedError\tclass"
			],
			[
				"No",
				"NotImplementedError\tclass"
			],
			[
				"sum",
				"sum_func\tfunction"
			],
			[
				"model",
				"model_tf_logs_path\tstatement"
			],
			[
				"tens",
				"tensorboard_dir\tstatement"
			],
			[
				"remo",
				"removedirs\tfunction"
			],
			[
				"path",
				"pathes"
			],
			[
				"stder",
				"stderr_logs_file\tstatement"
			],
			[
				"stdou",
				"stdout_logs_file\tstatement"
			],
			[
				"stdout_logs",
				"stdout_logs_file"
			],
			[
				"std",
				"stdout_logs_dir\tstatement"
			],
			[
				"make",
				"makedirs\tfunction"
			],
			[
				"stdout",
				"stdout_logs_path"
			],
			[
				"wor",
				"workspace"
			],
			[
				"workspa",
				"workspace"
			],
			[
				"stdo",
				"stdout_logs_path\tstatement"
			],
			[
				"work",
				"workspaces"
			],
			[
				"Exc",
				"except"
			],
			[
				"remove",
				"remove_workspace\tfunction"
			],
			[
				"worksp",
				"workspace"
			],
			[
				"tf",
				"tf_saves"
			],
			[
				"works",
				"workspaces"
			],
			[
				"aio",
				"aiohttp_jinja2\tmodule"
			],
			[
				"wo",
				"workspaces"
			],
			[
				"load",
				"load_workspace"
			],
			[
				"train",
				"train_qtty\tstatement"
			],
			[
				"class",
				"classmethod\tclass"
			],
			[
				"buil",
				"build"
			],
			[
				"Ex",
				"Executor\timport"
			],
			[
				"build",
				"build_model\tfunction"
			],
			[
				"aiohtt",
				"aiohttp_jinja2\tmodule"
			],
			[
				"epoc",
				"epoch_progress"
			],
			[
				"upda",
				"updateData"
			],
			[
				"ran",
				"random\tstatement"
			],
			[
				"push",
				"pushData"
			],
			[
				"as",
				"asyncio\tmodule"
			],
			[
				"layer",
				"layer_params\tparam"
			],
			[
				"fla",
				"flattened\tstatement"
			],
			[
				"print",
				"print_line\tforstmt"
			],
			[
				"prin",
				"prints\tstatement"
			],
			[
				"code",
				"code_string\tstatement"
			],
			[
				"out",
				"output_vars"
			],
			[
				"input",
				"input_vars_names\tstatement"
			],
			[
				"outpu",
				"output_idx\tstatement"
			],
			[
				"parent",
				"parent_outputs\tstatement"
			],
			[
				"paren",
				"parent_idx\tstatement"
			],
			[
				"state",
				"states\tstatement"
			],
			[
				"import",
				"importlib\tmodule"
			],
			[
				"lr",
				"lr_op_line\tstatement"
			],
			[
				"par",
				"parted_params\tstatement"
			],
			[
				"inpu",
				"input_shape\tforstmt"
			],
			[
				"sorte",
				"sorted_idx\tforstmt"
			],
			[
				"sor",
				"sorted_layers\tstatement"
			],
			[
				"modul",
				"modules_info"
			],
			[
				"lay",
				"layer_idx\tparam"
			],
			[
				"target",
				"targets\tstatement"
			],
			[
				"vars",
				"vars_names\tstatement"
			],
			[
				"loss",
				"loss_input_var_name\tforstmt"
			],
			[
				"gene",
				"generate_leaning_op_input_string\tfunction"
			],
			[
				"laye",
				"layers\tstatement"
			],
			[
				"inpt",
				"input_vars_names\tstatement"
			],
			[
				"outp",
				"output_vars_names\tstatement"
			],
			[
				"module",
				"module_name"
			],
			[
				"gui",
				"gui_cleared_params"
			],
			[
				"generat",
				"generate_layer_input_string\tfunction"
			],
			[
				"func",
				"func_name\tstatement"
			],
			[
				"mou",
				"modules_info\tstatement"
			],
			[
				"params",
				"params_from_gui\tparam"
			],
			[
				"handl",
				"handle_layer_params\tfunction"
			],
			[
				"all",
				"all_layers"
			],
			[
				"_inpu",
				"_input_params\tforstmt"
			],
			[
				"inp",
				"input_vars_names\tstatement"
			],
			[
				"var",
				"var_idx\tforstmt"
			],
			[
				"pare",
				"parent_output\tstatement"
			],
			[
				"chec",
				"check_for_ver_and_rev\tfunction"
			],
			[
				"child",
				"child_layer\tstatement"
			],
			[
				"dis",
				"disable_childs\tfunction"
			],
			[
				"chil",
				"child_layer\tstatement"
			],
			[
				"param",
				"params_from_gui\tparam"
			],
			[
				"chi",
				"child_id\tforstmt"
			],
			[
				"la",
				"layer_params\tparam"
			],
			[
				"parent_",
				"parent_shapes\tstatement"
			],
			[
				"server",
				"server_params\tparam"
			],
			[
				"one",
				"one_paren_idx\tstatement"
			],
			[
				"modue",
				"modules_info\tstatement"
			],
			[
				"last",
				"last_layers\tparam"
			],
			[
				"las",
				"last_layers\tparam"
			],
			[
				"f_",
				"func_params\tparam"
			],
			[
				"para",
				"params_handler\tmodule"
			],
			[
				"pa",
				"params\tparam"
			],
			[
				"err",
				"errors\tmodule"
			],
			[
				"Inde",
				"IndexError\tclass"
			],
			[
				"req",
				"req_ver\tstatement"
			],
			[
				"modules",
				"modules_info"
			],
			[
				"modl",
				"modules_info\tparam"
			],
			[
				"resu",
				"result_dict\tstatement"
			],
			[
				"result",
				"result_dict"
			]
		]
	},
	"buffers":
	[
		{
			"file": "rbm_2_stop_grads.py",
			"settings":
			{
				"buffer_size": 4444,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "utils.py",
			"settings":
			{
				"buffer_size": 5074,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/PIL/Image.py",
			"settings":
			{
				"buffer_size": 82447,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/PIL/ImageShow.py",
			"settings":
			{
				"buffer_size": 4824,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "rbm_1_class_based.py",
			"settings":
			{
				"buffer_size": 8911,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "run.py",
			"settings":
			{
				"buffer_size": 696,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/legatsap/Shared/Illarion/RBMs/RMBS.sublime-project",
		"/home/legatsap/Shared/Illarion/DCGenerator/DCGenerator.sublime-project",
		"/home/legatsap/envs/DCG_35/lib/python3.5/site-packages/PIL/ImageShow.py",
		"/home/legatsap/envs/DCG_35/lib/python3.5/site-packages/PIL/Image.py",
		"/home/legatsap/Shared/Illarion/lstm-char-cnn-my_version/skeleton.py",
		"/home/legatsap/Shared/Illarion/RBMs/data_providers.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/code_generator/build/model_generated.py",
		"/home/legatsap/Shared/Illarion/Deep-Learning-TensorFlow/yadlt/core/unsupervised_model.py",
		"/home/legatsap/Shared/Illarion/Deep-Learning-TensorFlow/yadlt/utils/utilities.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/code_generator/modules/core_layers.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/docs/wishes_descriptioin",
		"/home/legatsap/Shared/Illarion/DCGenerator/docs/architecture.rst",
		"/home/legatsap/Shared/Illarion/Deep-Learning-TensorFlow/command_line/config.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/docs/architecture_thoughts.txt",
		"/home/legatsap/Shared/Illarion/DCGenerator/docs/TODO",
		"/home/legatsap/Projects/blog_site/pages/machine-learning/ml-bookmarks.rst",
		"/tmp/check_pool.py",
		"/home/legatsap/Shared/Illarion/Deep-Learning-TensorFlow/yadlt/core/model.py",
		"/home/legatsap/envs/DCG_35/lib/python3.5/site-packages/tensorflow/python/ops/logging_ops.py",
		"/home/legatsap/Shared/Illarion/RBMs/run.py",
		"/home/legatsap/Projects/blog_site/pages/ml_notes_at_deep_learning_book",
		"/home/legatsap/Shared/Illarion/DCGenerator/code_generator/modules/data_providers.py",
		"/home/legatsap/envs/DCG_35/lib/python3.5/site-packages/tensorflow/examples/tutorials/mnist/__init__.py",
		"/home/legatsap/envs/DCG_35/lib/python3.5/site-packages/tensorflow/examples/tutorials/mnist/input_data.py",
		"/home/legatsap/envs/DCG_35/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/datasets/mnist.py",
		"/home/legatsap/envs/DCG_35/lib/python3.5/site-packages/tensorflow/examples/tutorials/mnist/mnist.py",
		"/tmp/some/tmp.py",
		"/tmp/some/out.txt",
		"/tmp/some/out",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/views.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/model_executor.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/params_class.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/config.yaml",
		"/home/legatsap/Shared/Illarion/DCGenerator/code_generator/model_skeleton.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/code_generator/pre_builder_params_handler.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/main.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/code_generator/modules_pre_process.py",
		"/home/legatsap/Projects/blog_site/pages/machine-learning/general-ml-notes.rst",
		"/home/legatsap/Projects/blog_site/pages/machine-learning/ml-knowledge-base.rst",
		"/tmp/saves/stdout_logs/test-name-1/stdout",
		"/tmp/saves/stdout_logs/test-name-1_out",
		"/tmp/saves/stdout_logs/test-name-1_err",
		"/tmp/saves/tf_saves/checkpoint",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/routes.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/set_graph_settings.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/index.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/build_graph_structure.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/build_graph_structure_with_js.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/workspaces/load_remove_workspace.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/workspaces/new_workspace.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/saves/workspaces.json",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/save_params.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/load_workspace.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/new_workspace.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/load_params.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/node_internal_params.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/model_train_metrics.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/eval_model.html",
		"/tmp/model_text_err",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/templates/model_training_was_finished.html",
		"/home/legatsap/envs/DCG_35/lib/python3.5/site-packages/tflearn/models/dnn.py",
		"/tmp/model_text_out",
		"/tmp/some.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/d3js_example/d3js_example.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/d3js_example/d3js_dynamic.html",
		"/home/legatsap/Shared/Illarion/DCGenerator/d3js_example/d3js_example_simple_chart.html",
		"/home/legatsap/envs/DCG_35/lib/python3.5/site-packages/tflearn/helpers/summarizer.py",
		"/home/legatsap/envs/DCG_35/lib/python3.5/site-packages/tflearn/helpers/trainer.py",
		"/home/legatsap/envs/DCG_35/lib/python3.5/site-packages/tensorflow/contrib/layers/python/layers/summaries.py",
		"/home/legatsap/envs/DCG_35/lib/python3.5/site-packages/aiohttp/web.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tflearn/layers/core.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/params_file.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules/transformations.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules_pre_process.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/gui_params_handler.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/builder.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/pre_builder_params_handler.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/check.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tflearn/config.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules/recurrent_layers.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tflearn/layers/recurrent.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules/core_layers.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/model_skeleton.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/tmp_tflearn_example.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/graph_gui/example.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/example.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/server/__main__.py",
		"/home/legatsap/Shared/Illarion/lstm-char-cnn-my_version/model_tmp.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/build/model_builded_for_test.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/build/model_generated.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/errors.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tflearn/models/dnn.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tflearn/utils.py",
		"/home/legatsap/Shared/Illarion/autoencoder_for_punctuation/model_one_summed_states.py",
		"/home/legatsap/Projects/blog_site/pages/machine-learning/tensorflow-hints.rst",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tflearn/helpers/evaluator.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/.gitignore",
		"/home/legatsap/Shared/Illarion/DCGenerator/params_handler.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules/utils.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules/losses.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tensorflow/python/ops/logging_ops.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tensorflow/python/ops/gen_logging_ops.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules/optimizers.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/docs/conventions.txt",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules_versioned/core_layers.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py",
		"/home/legatsap/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tflearn/helpers/trainer.py",
		"/home/legatsap/Shared/Illarion/lstm-char-cnn-my_version/res_file_25",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules_versioned/core.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tflearn/layers/estimator.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tflearn/variables.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules/core.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/TODO",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules_versioned/optimizers.py",
		"/home/legatsap/.config/sublime-text-3/Packages/FileBrowser/Default.sublime-keymap",
		"/home/legatsap/.config/sublime-text-3/Packages/FileBrowser/dired.sublime-settings",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules_versioned/basic_modules.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tflearn/activations.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tflearn/__init__.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/utils.py",
		"/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/tflearn/helpers/regularizer.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/modules_versioned/basic_modules_versioned.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/imported.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/build/text_imports.py",
		"/home/legatsap/Shared/Illarion/DCGenerator/basic_modules.py"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"sample",
			"size_h",
			"size_x",
			"size_bt",
			"side_h",
			"imagexk",
			"images_stack",
			"fetches",
			"images",
			"_show",
			"tiled",
			"xrange",
			"print ",
			"float(",
			"rbm_1_class_based",
			"runn_no",
			"validate",
			"_epoch_validate_step",
			"saves_path",
			"saves_dir",
			"saver",
			"targets",
			"labels",
			"reconstruction",
			"encode",
			"visible_activation",
			"vis_probs",
			"bias_hidden",
			"bias_visible",
			"vprobs",
			"vis_probs",
			"hid_states",
			"sample_prob",
			"hrand",
			"num_hidden",
			"num_hiden",
			"num_hidden",
			"_initialize_training_parameters",
			"build_model",
			"iterator",
			"gibbs_sampling_steps",
			"model_tf_logs_path",
			"shutil",
			"tensorboard_dir",
			"model_name",
			"resp_metrics",
			"stdout_logs_file",
			"tf_logs_path",
			"stdout_logs_path",
			"stdout_dir",
			"save_model_path",
			"save_dir",
			"name",
			"model_name",
			"tf_saves",
			"tmp_saves",
			"name",
			"save_path",
			"target_path",
			"params_dir",
			"main_saves",
			"saves_dir",
			"params_dir",
			"/home/legatsap/Shared/Illarion/DCGenerator/saves",
			"workspaces_json_path",
			"required",
			"description",
			"config",
			"connfig",
			"wp_idx",
			"name",
			"saved_models",
			"workspaces",
			"saved_models",
			"name",
			"saved_models",
			"workspaces",
			"workspaces_list",
			"prev_workspaces",
			"workspaces_list",
			"workspace",
			"save_workspace",
			"workspace",
			"params",
			"load_workspace",
			"save_params",
			"workspace_name",
			"graph_name",
			"workspace_name",
			"new_workspace_post",
			"100000",
			"train_qtty",
			"layer_params",
			"save_path",
			"save_model_path",
			"multiproc_running_model",
			"multiproc_train",
			"params",
			"build_model",
			"generate_model_code",
			"get_validated_builder_params",
			"get_validated_builder_params\nget_validated_builder_params",
			"get_validated_builder_params",
			"exists_ok",
			"eval_model",
			"600",
			"progress",
			"proc",
			"avail_for_log",
			"tensors_to_log",
			"tensros_to_log",
			"summ_collection",
			"Optimizer",
			"tensorboard_verbose",
			"hello_view",
			"last_layer_out_params",
			"disabled",
			"disable",
			"debug_print",
			"layer_params",
			"vars_names",
			"model_builded_for_test",
			"builded_model_name",
			"BUILD_MODEL_NAME",
			"model_generated",
			"validated_builder_params",
			"gui_cleared_params",
			"keep_prob"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "rbm_2_stop_grads.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4444,
						"regions":
						{
						},
						"selection":
						[
							[
								835,
								835
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "utils.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5074,
						"regions":
						{
						},
						"selection":
						[
							[
								576,
								576
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										724,
										725
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										574,
										575
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/PIL/Image.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 82447,
						"regions":
						{
						},
						"selection":
						[
							[
								81666,
								81666
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										81690,
										81691
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										81666,
										81667
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 36812.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/legatsap/envs/tensorflow_35/lib/python3.5/site-packages/PIL/ImageShow.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4824,
						"regions":
						{
						},
						"selection":
						[
							[
								3962,
								3962
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1907.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "rbm_1_class_based.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8911,
						"regions":
						{
						},
						"selection":
						[
							[
								495,
								495
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "run.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 696,
						"regions":
						{
						},
						"selection":
						[
							[
								96,
								96
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "RMBS.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
